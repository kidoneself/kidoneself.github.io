name: Deploy to GitHub Pages and Server

on:
  push:
    branches:
      - main  # 每次推送到 main 分支时触发

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout Code
        uses: actions/checkout@v2  # 检出代码

      # 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '23.5.0'  # 设置 Node.js 版本

      # 安装 Yarn 2.x (Berry)
      - name: Install Yarn 1.22.19
        run: |
          npm install -g yarn@berry


      # 安装依赖
      - name: Install Dependencies
        run: |
          yarn install  # 安装依赖

      # 构建静态文件
      - name: Build Static Files
        run: |
          pwd
          yarn add vuepress@latest 
          yarn build  # 构建 VuePress 静态文件

      # 提交并推送所有代码到 main 分支
      - name: Commit and Push All Code to Main
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -A
          git commit -m "Deploy code to main"
          git push origin main  # 将代码推送到 main 分支

      # 将构建的静态文件推送到 GitHub Pages 的 gh-pages 分支
      - name: Deploy to GitHub Pages
        run: |
          cd .vuepress/dist  # 进入构建输出目录
          git init  # 初始化一个新的 Git 仓库
          git add -A
          git commit -m 'deploy'  # 提交静态文件
          git push -f git@github.com:kidoneself/kidoneself.github.io.git main:gh-pages  # 强制推送到 gh-pages 分支

      # 通过 SSH 部署到服务器
      - name: Deploy to Server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@43.134.58.162 'bash -s' << 'EOF'
            cd /home/kidoneself.github.io  # 进入服务器的项目目录
            git pull origin main  # 拉取最新代码
            yarn build  # 重新构建静态文件
            sudo systemctl restart caddy  # 重启 Caddy 服务
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # 使用 GitHub Secrets 中配置的私钥